[
    {
        "id": "20a5cb0f454b7473",
        "type": "tab",
        "label": "postgres-view"
    },
    {
        "id": "rg27l396tq343btv",
        "type": "comment",
        "z": "20a5cb0f454b7473",
        "name": "postgres-view",
        "info": "",
        "x": 450,
        "y": 140,
        "wires": []
    },
    {
        "id": "dnioqi3rl380y0cu",
        "type": "comment",
        "z": "20a5cb0f454b7473",
        "name": "This subflow catches the errors",
        "info": "",
        "x": 450,
        "y": 240,
        "wires": []
    },
    {
        "id": "6802142i7zbkk883",
        "type": "comment",
        "z": "20a5cb0f454b7473",
        "name": "GetEndPoint (view attributes are query parameters)",
        "info": "",
        "x": 450,
        "y": 390,
        "wires": []
    },
    {
        "id": "8yt2gv890pi922y4",
        "type": "comment",
        "z": "20a5cb0f454b7473",
        "name": "PostEndPoint (request body contains the attributes of the view, no request parameters)",
        "info": "",
        "x": 450,
        "y": 540,
        "wires": []
    },
    {
        "id": "nd30l34amb1bb745",
        "type": "comment",
        "z": "20a5cb0f454b7473",
        "name": "PutEndPoint (request body contains the attributes of the view, request parameters the primary key)",
        "info": "",
        "x": 450,
        "y": 690,
        "wires": []
    },
    {
        "id": "5xn720p1f0608qm1",
        "type": "comment",
        "z": "20a5cb0f454b7473",
        "name": "DeleteEndPoint (no request body, request parameters contain the primary key)",
        "info": "",
        "x": 450,
        "y": 840,
        "wires": []
    },
    {
        "id": "kd44l2gs2d7sd79e",
        "type": "comment",
        "z": "20a5cb0f454b7473",
        "name": "DeleteEndPoint (view attributes are query parameters)",
        "info": "",
        "x": 450,
        "y": 990,
        "wires": []
    },
    {
        "id": "54vf2c3391n9021w",
        "type": "catch",
        "z": "20a5cb0f454b7473",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 150,
        "y": 290,
        "wires": [
            [
                "t2px1ta227u2wd8j"
            ]
        ]
    },
    {
        "id": "t2px1ta227u2wd8j",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "CreateError",
        "func": "// Store the error message \n// in the payload property.\nmsg.payload = {\n    \"error\": msg.error.message\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 290,
        "wires": [
            [
                "1753o08y9s8kra5a"
            ]
        ]
    },
    {
        "id": "1753o08y9s8kra5a",
        "type": "http response",
        "z": "20a5cb0f454b7473",
        "name": "",
        "statusCode": 400,
        "headers": {},
        "x": 650,
        "y": 290,
        "wires": []
    },
    {
        "id": "6jl92k7h157mvj1q",
        "type": "http in",
        "z": "20a5cb0f454b7473",
        "name": "",
        "url": "/public.housesview",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "0ca0tsm66f8wpbom"
            ]
        ]
    },
    {
        "id": "0ca0tsm66f8wpbom",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryProperties = Object.getOwnPropertyNames(msg.req.query);\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (msg.req.query.houseid !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"houseid\", \"propertyValue\": `${msg.req.query.houseid}`});\n}\n\nif (msg.req.query.housename !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"housename\", \"propertyValue\": `${msg.req.query.housename}`});\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 440,
        "wires": [
            [
                "n18ix34957p1f7n4"
            ]
        ]
    },
    {
        "id": "n18ix34957p1f7n4",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "CreateSelectQuery",
        "func": "var selectQuery = \"SELECT * FROM public.housesview\";\nvar equations = [];\n\nif (msg.queryProperties.length > 0){\n    for (let i = 0; i < msg.queryProperties.length; i++){\n        let equation = \"\";\n        \n        if (msg.queryProperties[i].propertyValue === \"null\"){\n            equation = `${msg.queryProperties[i].propertyName} is ${msg.queryProperties[i].propertyValue}`;\n        } else {\n            equation = `${msg.queryProperties[i].propertyName} = '${msg.queryProperties[i].propertyValue}'`;\n        }\n        \n        equations.push(equation);\n    }\n    \n    var equationsJoined = equations.join(\" AND \");\n    selectQuery += \" WHERE \";\n    selectQuery += `${equationsJoined}`;\n}\n\nselectQuery += \";\";\nmsg.query = selectQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 440,
        "wires": [
            [
                "62m4q5982i0jxskf"
            ]
        ]
    },
    {
        "id": "62m4q5982i0jxskf",
        "type": "postgresql",
        "z": "20a5cb0f454b7473",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "268k38sxpx0f90hn",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 440,
        "wires": [
            [
                "83afi75t357di96l"
            ]
        ]
    },
    {
        "id": "83afi75t357di96l",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "SetResponse",
        "func": "var response = msg.payload;\nmsg.payload = {\n  \"result\": response  \n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 440,
        "wires": [
            [
                "0qyh722alamjn4yo"
            ]
        ]
    },
    {
        "id": "0qyh722alamjn4yo",
        "type": "http response",
        "z": "20a5cb0f454b7473",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1650,
        "y": 440,
        "wires": []
    },
    {
        "id": "98uykjtmi2uo4352",
        "type": "http in",
        "z": "20a5cb0f454b7473",
        "name": "",
        "url": "/public.housesview",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 590,
        "wires": [
            [
                "0npeiwz3l690e045"
            ]
        ]
    },
    {
        "id": "0npeiwz3l690e045",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryPropertyNames = Object.getOwnPropertyNames(msg.req.body);\n\nif (queryPropertyNames.some(p => !properties.some(p1 => p1 == p))) {\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (msg.req.body.houseid !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"houseid\", \"propertyValue\": `${msg.req.body.houseid}` })\n}\n\nif (msg.req.body.housename !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"housename\", \"propertyValue\": `${msg.req.body.housename}` })\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 590,
        "wires": [
            [
                "xr82qfg79l1u6123"
            ]
        ]
    },
    {
        "id": "xr82qfg79l1u6123",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "CreateInsertQuery",
        "func": "var insertQuery = \"INSERT INTO public.housesview\";\nvar propertyNames = msg.queryProperties.map(p => p.propertyName);\nvar propertyValues = [];\n\nfor (let i = 0; i < msg.queryProperties.length; i++){\n    if (msg.queryProperties[i].propertyValue === \"null\"){\n        propertyValues.push(msg.queryProperties[i].propertyValue);\n    } else{\n        propertyValues.push(`'${msg.queryProperties[i].propertyValue}'`);\n    }\n}\n\nvar propertyNamesJoined = propertyNames.join(\",\");\nvar propertyValuesJoined = propertyValues.join(\",\");\ninsertQuery += `(${propertyNamesJoined})`;\ninsertQuery += \" VALUES \";\ninsertQuery += `(${propertyValuesJoined})`;\ninsertQuery += \";\";\nconsole.log(insertQuery);\nmsg.query = insertQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 590,
        "wires": [
            [
                "wjwxu71202sigj1f"
            ]
        ]
    },
    {
        "id": "wjwxu71202sigj1f",
        "type": "postgresql",
        "z": "20a5cb0f454b7473",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "268k38sxpx0f90hn",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 590,
        "wires": [
            [
                "4d0ek23k834qx2xq"
            ]
        ]
    },
    {
        "id": "4d0ek23k834qx2xq",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 590,
        "wires": [
            [
                "28m9k92vs9b26v08"
            ]
        ]
    },
    {
        "id": "28m9k92vs9b26v08",
        "type": "http response",
        "z": "20a5cb0f454b7473",
        "name": "",
        "statusCode": 201,
        "headers": {},
        "x": 1650,
        "y": 590,
        "wires": []
    },
    {
        "id": "4683fz3w04n1x11s",
        "type": "http in",
        "z": "20a5cb0f454b7473",
        "name": "",
        "url": "/public.housesview/:houseid",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 740,
        "wires": [
            [
                "m8y607nnrz6w4dm5"
            ]
        ]
    },
    {
        "id": "m8y607nnrz6w4dm5",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryPropertyNames = Object.getOwnPropertyNames(msg.req.body);\n\nif (msg.req.params.houseid === undefined){\n    throw new Error('The query parameter \\'houseid\\' was undefined!');\n}\n\nif (queryPropertyNames.some(p => !properties.some(p1 => p1 == p))) {\n    throw new Error(\"Invalid query property detected!\");\n}\n\nmsg.pk = {\"propertyName\": \"houseid\", \"propertyValue\": msg.req.params.houseid};\n\nif (msg.req.body.houseid !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"houseid\", \"propertyValue\": `${msg.req.body.houseid}` })\n}\n\nif (msg.req.body.housename !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"housename\", \"propertyValue\": `${msg.req.body.housename}` })\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 740,
        "wires": [
            [
                "wzzq3qm6r1997760"
            ]
        ]
    },
    {
        "id": "wzzq3qm6r1997760",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "CreateUpdateQuery",
        "func": "var propertyNames = msg.queryProperties.map(p => p.propertyName);\nvar propertyValues = msg.queryProperties.map(p => p.propertyValue);\nvar equations = [];\n\nfor (let i = 0; i < propertyNames.length; i++){\n    var propertyValue = \"\";\n\n    if (propertyValues[i] === \"null\"){\n        propertyValue = propertyValues[i];\n    } else{\n        propertyValue = `'${propertyValues[i]}'`;\n    }\n\n    var equation = `${propertyNames[i]} = ${propertyValue}`;\n    equations.push(equation);\n}\n\nvar pk = \"\";\n\nif (msg.pk.propertyValue === \"null\"){\n    pk = msg.pk.propertyValue;\n} else{\n    pk = `'${msg.pk.propertyValue}'`;\n}\n\nvar equationsJoined = equations.join(\",\");\nvar updateQuery = `UPDATE public.housesview SET ${equationsJoined} WHERE ${msg.pk.propertyName} = ${pk};`;\nmsg.query = updateQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 740,
        "wires": [
            [
                "b98a0e329qzt3l31"
            ]
        ]
    },
    {
        "id": "b98a0e329qzt3l31",
        "type": "postgresql",
        "z": "20a5cb0f454b7473",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "268k38sxpx0f90hn",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 740,
        "wires": [
            [
                "41pr63r3dztrqxc1"
            ]
        ]
    },
    {
        "id": "41pr63r3dztrqxc1",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 740,
        "wires": [
            [
                "s6mtk43e93kg478e"
            ]
        ]
    },
    {
        "id": "s6mtk43e93kg478e",
        "type": "http response",
        "z": "20a5cb0f454b7473",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1650,
        "y": 740,
        "wires": []
    },
    {
        "id": "8l5fv10gnk0c9183",
        "type": "http in",
        "z": "20a5cb0f454b7473",
        "name": "",
        "url": "/public.housesview/:houseid",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 890,
        "wires": [
            [
                "58j5trl7u7yh0ky2"
            ]
        ]
    },
    {
        "id": "58j5trl7u7yh0ky2",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "SetQueryParameters",
        "func": "if (msg.req.params.houseid === undefined){\n    throw new Error(\"The query parameter \\'houseid\\' was undefined!\");\n}\n\nvar pkValue = \"\";\n\nif (msg.req.params.houseid === \"null\"){\n    pkValue = null;\n} else{\n    pkValue = msg.req.params.houseid;\n}\n\nvar data = {\n    pk: pkValue\n};\n\nmsg.queryParameters = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 890,
        "wires": [
            [
                "097l1p4mbb0dqgr2"
            ]
        ]
    },
    {
        "id": "097l1p4mbb0dqgr2",
        "type": "postgresql",
        "z": "20a5cb0f454b7473",
        "name": "Query",
        "query": "DELETE FROM public.housesview WHERE houseid = $pk;",
        "postgreSQLConfig": "268k38sxpx0f90hn",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 750,
        "y": 890,
        "wires": [
            [
                "xd8re0425w9z0fj5"
            ]
        ]
    },
    {
        "id": "xd8re0425w9z0fj5",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 890,
        "wires": [
            [
                "p01ha0jn4r751c09"
            ]
        ]
    },
    {
        "id": "p01ha0jn4r751c09",
        "type": "http response",
        "z": "20a5cb0f454b7473",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1350,
        "y": 890,
        "wires": []
    },
    {
        "id": "pxp50x6n461m226g",
        "type": "http in",
        "z": "20a5cb0f454b7473",
        "name": "",
        "url": "/public.housesview",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1040,
        "wires": [
            [
                "3wyy107hsg9rdq06"
            ]
        ]
    },
    {
        "id": "3wyy107hsg9rdq06",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryProperties = Object.getOwnPropertyNames(msg.req.query);\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (msg.req.query.houseid !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"houseid\", \"propertyValue\": `${msg.req.query.houseid}`});\n}\n\nif (msg.req.query.housename !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"housename\", \"propertyValue\": `${msg.req.query.housename}`});\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1040,
        "wires": [
            [
                "4u6zl1eob99xn2q9"
            ]
        ]
    },
    {
        "id": "4u6zl1eob99xn2q9",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "CreateDeleteQuery",
        "func": "var deleteQuery = \"DELETE FROM public.housesview\";\nvar equations = [];\n\nif (msg.queryProperties.length > 0){\n    for (let i = 0; i < msg.queryProperties.length; i++){\n        let equation = '';\n        \n        if (msg.queryProperties[i].propertyValue === \"null\"){\n            equation = `${msg.queryProperties[i].propertyName} is ${msg.queryProperties[i].propertyValue}`;\n        } else {\n            equation = `${msg.queryProperties[i].propertyName} = '${msg.queryProperties[i].propertyValue}'`;\n        }\n        \n        equations.push(equation);\n    }\n    \n    var equationsJoined = equations.join(\" AND \");\n    deleteQuery += \" WHERE \";\n    deleteQuery += `${equationsJoined}`;\n}\n\ndeleteQuery += \";\";\nmsg.query = deleteQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1040,
        "wires": [
            [
                "5b49h688hw579n76"
            ]
        ]
    },
    {
        "id": "5b49h688hw579n76",
        "type": "postgresql",
        "z": "20a5cb0f454b7473",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "268k38sxpx0f90hn",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 1040,
        "wires": [
            [
                "x9174y2yu4kb3156"
            ]
        ]
    },
    {
        "id": "x9174y2yu4kb3156",
        "type": "function",
        "z": "20a5cb0f454b7473",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 1040,
        "wires": [
            [
                "9unj180xi92667d8"
            ]
        ]
    },
    {
        "id": "9unj180xi92667d8",
        "type": "http response",
        "z": "20a5cb0f454b7473",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1650,
        "y": 1040,
        "wires": []
    },
    {
        "id": "268k38sxpx0f90hn",
        "type": "postgreSQLConfig",
        "z": "20a5cb0f454b7473",
        "name": "",
        "host": "localhost",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "admin",
        "userFieldType": "str",
        "password": "secret",
        "passwordFieldType": "str"
    }
]